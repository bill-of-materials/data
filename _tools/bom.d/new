#!/bin/bash

set -euo pipefail

# Pretty print command name
COMMAND=${0//\// }
COMMAND=${COMMAND/*bom.d/bom}

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-

get_usage () {
  cat <<EOF
Create entities from templates

usage:
  $COMMAND                      # Display help
  $COMMAND -h|--help            # Display help

  # Information gathering on K8S cluster
  $COMMAND artifact|rtf         # Create new artifact
  $COMMAND element|elm          # Create new element
  $COMMAND operator|op          # Create new operator
  $COMMAND rfc                  # Create new rfc
  $COMMAND sandbox|sbx|snd|sand # Create new sandbox
EOF
}

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-

if [ $# -lt 1 ] || [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
  get_usage
  exit 1
fi

idget () {
  prefix="$1"
  re='^[0-9]{4}$'
  id=

  while [[ ! $id =~ $re ]] || [[ -d "${prefix}${id}" ]]; do
    read -rp "Please input entity's id.
(use 4 digit number or anything else to generate a random ID) " id
    if ! [[ $id =~ $re ]] ; then
      logg info "Unrecognized 4 digit input, generating a random ID:"
      id=$(printf "%04d\n" $((RANDOM%9999+1)))
    fi
    if [[ -d "${prefix}${id}" ]]; then
      logg e "id=${id}: already taken."
    fi
  done

  logg y "id=${id}"
  logg nl
  export id
}

nameget () {
  re='^[^/><|:&]+$'
  name=

  while [[ ! $name =~ $re ]]; do
    read -rp "Please input entity's name. " name
  done

  logg y "name=${name}"
  logg nl
  export name
}

# Create a new thing
new () {
  prefix="${BOMPATH}/${1}"
  idget "${prefix}"
  nameget

  read -p "Create ${prefix}${id} with name \"${name}\"? [y|n] " -n1 -r
  if [[ "$REPLY" =~ ^[Yy]$ ]]; then
    mkdir "${prefix}${id}"
    cd "${prefix}${id}"
    cp ../.template.md "${prefix}${id}/README.md"
    sed -i "s/%%id%%/${id}/g" "${prefix}${id}/README.md"
    sed -i "s/%%name%%/${name}/g" "${prefix}${id}/README.md"
    touch "${name}.name"
  fi
}

# Create a new sandbox
newsandbox () {
  return
}

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-

case "${1}" in
  artifact|rtf)         new "ARTIFACTS/RTF-" ;;
  element|elm)          new "ELEMENTS/ELM-" ;;
  operator|op)          new "OPERATORS/OP-" ;;
  rfc)                  new "RFC/RFC-" ;;
  sandbox|sbx|sand|snd) newsandbox ;;

  *)
    echo "Option ${1} not recognised." >&2
    get_usage
    exit 1
    ;;
esac
